from pulumi import Config
cfg = Config("learning")
config = {
    "region": cfg.require("region"),
    "zone": cfg.require("zone"),
    "vpc_name": cfg.get("vpc_name") or "kubernate-vpc",
    "vpc_cidr_block": cfg.get("vpc_cidr_block") or "10.0.0.0/16",
    "public_key": cfg.require("public_key"),
    "machine_type": cfg.get("machine_type") or "e2-medium",
    "master_count": cfg.get_int("master_count") or 1,
    "worker_count": cfg.get_int("worker_count") or 2,
    "master_disk_size": cfg.get_int("master_disk_size") or 50,
    "worker_disk_size": cfg.get_int("worker_disk_size") or 50,
    "master_disk_type": cfg.get("master_disk_type") or "pd-standard",
    "worker_disk_type": cfg.get("worker_disk_type") or "pd-standard",
    "master_tags": cfg.get_object("master_tags") or {},
    "worker_tags": cfg.get_object("worker_tags") or {},
    "master_labels": cfg.get_object("master_labels") or {},
    "worker_labels": cfg.get_object("worker_labels") or {},
    "master_service_account": cfg.get("master_service_account") or "default",
    "worker_service_account": cfg.get("worker_service_account") or "default",
    "master_network_tags": cfg.get_object("master_network_tags") or {},
    "worker_network_tags": cfg.get_object("worker_network_tags") or {},
    "master_subnet_name": cfg.get("master_subnet_name") or "kubernate-master-subnet",
    "worker_subnet_name": cfg.get("worker_subnet_name") or "kubernate-worker-subnet",
    "public_subnet_name": cfg.get("public_subnet_name") or "kubernate-public-subnet",
    "private_subnet_name": cfg.get("private_subnet_name") or "kubernate-private-subnet",
    "public_subnet_cidr_block": cfg.get_object("public_subnet_cidr_block") or ["10.0.1.0/24"],
    "private_subnet_cidr_block": cfg.get_object("private_subnet_cidr_block") or ["10.0.2.0/24"],
    "ingress_ports_master": cfg.get_object("ingress_ports_master") or [],
    "ingress_ports_worker": cfg.get_object("ingress_ports_worker") or [],
    "enable_nat_gateway": cfg.get_bool("enable_nat_gateway") or True,
    "image_family": cfg.get("imageFamily") or "ubuntu-2204-lts",
    "image_project": cfg.get("imageProject") or "ubuntu-os-cloud",
}

